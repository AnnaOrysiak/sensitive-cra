{"version":3,"sources":["layout/Header.js","components/Loader.js","utils/config.js","layout/Navigation.js","components/News.js","pages/Homepage.js","components/Story.js","pages/Storypage.js","pages/Adminpage.js","pages/Loginpage.js","pages/Errorpage.js","layout/Page.js","layout/Footer.js","layout/App.js","serviceWorker.js","index.js"],"names":["Header","className","Loader","config","baseUrl","baseCorsUrl","Navigation","state","active","stories","navigationHandler","setState","prevState","getStoriesList","map","story","key","_id","to","id","onClick","chapter_title","title","fetch","then","res","ok","json","Error","status","data","catch","err","console","log","this","exact","length","Component","News","props","description","date","utfDate","Date","toLocaleDateString","Homepage","news","generateNews","Story","type","content","authors","parse","Storypage","fetchNewStory","match","params","prevProps","Adminpage","checkPermission","render","permission","Loginpage","login","pass","errors","messages","login_incorrect","email_incorrect","password_incorrect","handleInputChange","e","name","target","value","handleSubmit","preventDefault","validation","formValidation","correct","message","password","indexOf","setTimeout","onSubmit","noValidate","onChange","htmlFor","Errorpage","Page","path","component","Footer","App","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cb91ec92.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../style/header.css'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <>\r\n      <div className=\"header\"></div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport '../style/loader.css';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"loading-circle\">\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loader;","const config = {\r\n  baseUrl: \"https://sensitive-express.herokuapp.com/api/\",\r\n  baseCorsUrl: \"https://cors-anywhere.herokuapp.com/https://sensitive-express.herokuapp.com/api/\",\r\n}\r\n\r\nexport default config;","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n// import StoryListElement from '../components/StoryListElement';\r\nimport Loader from '../components/Loader';\r\nimport config from '../utils/config';\r\nimport '../style/navigation.css';\r\n\r\nclass Navigation extends Component {\r\n  state = {\r\n    active: false,\r\n    stories: [],\r\n  }\r\n\r\n  navigationHandler = () => {\r\n    this.setState(prevState => ({ active: !prevState.active }))\r\n  }\r\n\r\n  getStoriesList = () => {\r\n    const storiesList = this.state.stories.map((story) =>\r\n      <li key={story._id}>\r\n        <NavLink to={`/story/${story._id}`} id={story._id} onClick={this.navigationHandler}>{story.chapter_title} {story.title} </NavLink>\r\n      </li>\r\n    )\r\n\r\n    return storiesList;\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(`${config.baseCorsUrl}stories`)\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json()\r\n        } else {\r\n          throw new Error(\"error \", res.status)\r\n        }\r\n      })\r\n      .then(data => this.setState({ stories: data }))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <>\r\n        <div className={this.state.active ? 'btn menu-button active' : 'btn menu-button'} onClick={this.navigationHandler}>\r\n          <span className=\"menu-button__bar\"></span>\r\n          <span className=\"menu-button__bar\"></span>\r\n          <span className=\"menu-button__bar\"></span>\r\n        </div>\r\n        <div className={this.state.active ? 'menu active' : 'menu'}>\r\n          <section className=\"icons\">\r\n            <NavLink to='/' onClick={this.navigationHandler} exact><span className=\"icon\">start</span></NavLink>\r\n            <NavLink to='/login' onClick={this.navigationHandler}><span className=\"icon\">login</span></NavLink>\r\n          </section>\r\n\r\n          <h3 className=\"menu__header\">Opowiadania</h3>\r\n          <ul className=\"menu__list\">\r\n            {this.state.stories.length ? this.getStoriesList() : <Loader />}\r\n          </ul>\r\n        </div>\r\n      </>);\r\n  }\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\n\r\nconst News = (props) => {\r\n\r\n  const { title, description, date } = props;\r\n  const utfDate = new Date(date);\r\n\r\n  return (\r\n    <article className=\"articleNews\">\r\n      <h3>{title}</h3>\r\n      <span>{utfDate.toLocaleDateString()}</span>\r\n      <p className=\"articleNews__description\">{description}</p>\r\n    </article>\r\n\r\n  );\r\n}\r\n\r\nexport default News;","import React, { Component } from 'react';\r\nimport News from '../components/News';\r\nimport Loader from '../components/Loader';\r\nimport config from '../utils/config';\r\nimport '../style/main.css';\r\n\r\nclass Homepage extends Component {\r\n  state = { news: [] }\r\n\r\n  generateNews = () => {\r\n    const newsTemplates = this.state.news.map(news =>\r\n      <News key={news._id} title={news.title} date={news.date} description={news.description} />\r\n    )\r\n    return newsTemplates;\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(`${config.baseCorsUrl}news`)\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json()\r\n        } else {\r\n          throw new Error(\"error \", res.status)\r\n        }\r\n      })\r\n      .then(data => this.setState({ news: data }))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.news.length ? this.generateNews() : <Loader />}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Homepage;","import React from 'react';\r\nimport parse from 'html-react-parser';\r\nimport '../style/story.css';\r\n\r\nconst Story = (props) => {\r\n  const { type, title, chapter_title, content, authors } = props.story;\r\n\r\n  return (\r\n    <article className=\"story\">\r\n      <small>{type === \"story\" ? title + ' / ' + chapter_title : `${title} (${type})`}</small>\r\n      <h3 className=\"story__title\">{type === \"story\" ? chapter_title : title}</h3>\r\n      <div className=\"story__content\">{parse(content)}</div>\r\n      <p className=\"story__authors\">{authors}</p>\r\n\r\n      {/* pagination here */}\r\n      {type === \"story\" ? <p>\"pagination\"</p> : <p>\"no-pagination\"</p>}\r\n      {/* end of pagination */}\r\n    </article>\r\n\r\n  );\r\n}\r\n\r\nexport default Story;","import React, { Component } from 'react';\r\nimport Story from '../components/Story';\r\nimport Loader from '../components/Loader';\r\nimport config from '../utils/config';\r\n\r\nclass Storypage extends Component {\r\n  state = {\r\n    story: [],\r\n  }\r\n\r\n  fetchNewStory = () => {\r\n    const id = this.props.match.params.id;\r\n    fetch(`${config.baseCorsUrl}story/${id}`)\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json()\r\n        } else {\r\n          throw new Error(\"error \", res.status)\r\n        }\r\n      })\r\n      .then(data => this.setState({ story: data }))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchNewStory();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.match.params.id !== prevProps.match.params.id) {\r\n      this.fetchNewStory();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { story } = this.state;\r\n\r\n    return (\r\n      <>\r\n        {story._id ? <Story story={story} /> : <Loader />}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Storypage;\r\n","import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst permission = false;\r\n\r\nclass Adminpage extends Component {\r\n  state = {}\r\n\r\n  checkPermission = () => {\r\n    console.log(\"checking permission\");\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Route render={() => (\r\n          permission ? (<h3>Panel admina - dzień dobry</h3>) : (<Redirect to=\"/login/\" permission={this.checkPermission} />)\r\n        )} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Adminpage;","import React, { Component } from 'react';\r\nimport config from '../utils/config';\r\nimport '../style/forms.css';\r\n\r\nclass Loginpage extends Component {\r\n  state = {\r\n    login: \"\",\r\n    pass: \"\",\r\n    errors: {\r\n      login: false,\r\n      pass: false\r\n    }\r\n  }\r\n\r\n  messages = {\r\n    login_incorrect: \"Nazwa musi być dłuższa niż 10 znaków i nie może zawierać spacji\",\r\n    email_incorrect: \"Brak @ w emailu\",\r\n    password_incorrect: \"Hasło musi mieć od 8 do 20 znaków\",\r\n  }\r\n\r\n  handleInputChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    this.setState({\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const validation = this.formValidation();\r\n    if (validation.correct) {\r\n      this.setState({\r\n        login: \"\",\r\n        pass: \"\",\r\n        message: \"Formularz został wysłany\",\r\n\r\n        errors: {\r\n          login: false,\r\n          pass: false,\r\n        }\r\n      })\r\n    } else {\r\n\r\n      this.setState({\r\n        errors: {\r\n          login: !validation.login,\r\n          pass: !validation.password,\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  formValidation = () => {\r\n\r\n    let login = false;\r\n    let password = false;\r\n    let correct = false;\r\n\r\n    if (this.state.login.length >= 10 && this.state.login.indexOf(' ') === -1) {\r\n      login = true\r\n    }\r\n    //  if (this.state.email.indexOf('@') !== -1) {\r\n    //       email = true\r\n    //     }\r\n    if (this.state.pass.length >= 8 && this.state.pass.length <= 20) {\r\n      password = true\r\n    }\r\n\r\n    if (login && password) {\r\n      correct = true\r\n    }\r\n\r\n    return ({\r\n      correct,\r\n      login,\r\n      password\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    console.log(prevProps, this.props);\r\n    if (this.state.message !== \"\") {\r\n\r\n\r\n\r\n      setTimeout(() => this.setState({\r\n        message: \"\"\r\n      }), 3000)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <form className='form myForm' onSubmit={this.handleSubmit} noValidate>\r\n          <h2>Panel logowania</h2>\r\n          <div className=\"form__field\">\r\n            <input type=\"text\" name=\"login\" id=\"login\" className={this.state.errors.login ? \"form__input invalidate\" : (this.state.login.length > 0 ? \"form__input filled\" : \"form__input\")} value={this.state.login} onChange={this.handleInputChange} />\r\n            <label htmlFor=\"login\" className=\"form__label\">Login</label>\r\n            {this.state.errors.login && <span className=\"form__alert\">{this.messages.login_incorrect}</span>}\r\n          </div>\r\n\r\n\r\n          <div className=\"form__field\">\r\n            <input type=\"password\" name=\"pass\" id=\"pass\" className={this.state.errors.pass ? \"form__input invalidate\" : (this.state.pass.length > 0 ? \"form__input filled\" : \"form__input\")} value={this.state.pass} onChange={this.handleInputChange} />\r\n            <label htmlFor=\"pass\" className=\"form__label\">Hasło</label>\r\n            {this.state.errors.pass && <span className=\"form__alert\">{this.messages.password_incorrect}</span>}\r\n          </div>\r\n\r\n          <button className='btn form__button'>Zaloguj</button>\r\n        </form>\r\n        {this.state.message && <h3 className=\"form__confirmation\">{this.state.message}</h3>}\r\n\r\n\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Loginpage;","import React from 'react';\r\n\r\nconst Errorpage = () => {\r\n  return (\r\n    <div>\r\n      <h1>Ooops! Some Error Here</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Errorpage;","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Homepage from '../pages/Homepage'\r\nimport Storypage from '../pages/Storypage'\r\nimport Adminpage from '../pages/Adminpage'\r\nimport Loginpage from '../pages/Loginpage';\r\nimport Errorpage from '../pages/Errorpage';\r\n\r\nconst Page = () => {\r\n\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Homepage} />\r\n        <Route path=\"/story/:id\" component={Storypage} />\r\n        <Route path=\"/admin\" component={Adminpage} />\r\n        <Route path=\"/login\" component={Loginpage} />\r\n        <Route component={Errorpage} />\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Page;","import React from 'react';\r\nimport '../style/footer.css'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <p>Sensitive</p>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Header from './Header';\nimport Navigation from './Navigation';\nimport Page from './Page';\nimport Footer from './Footer';\n\n\nclass App extends Component {\n  render() {\n\n    return (\n      <Router>\n        <nav className='navigation'>\n          {<Navigation />}\n        </nav>\n        <header className=\"banner\">\n          {<Header />}\n        </header>\n        <main className=\"mainContainer\">\n          {<Page />}\n        </main>\n        <footer className=\"footer\">\n          {<Footer />}\n        </footer>\n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './layout/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}